AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  FullDomainName:
    Type: String
  DomainName:
    Type: String
  EditDomainName:
    Type: String
  TemplateLocation:
    Type: String
  MainSiteAcmCertificateArn:
    Type: String
  EditSiteAcmCertificateArn:
    Type: String
  Subnet1:
    Type: String
  Subnet2:
    Type: String
  DatabaseName:
    Type: String
    Default: 'test'
  VpcId:
    Type: String
  SSHLocation:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
  KeyName:
    Type: String
  InstanceAMI:
    Description: Managed AMI ID for EC2 Instance
    Type: String
    Default: ami-0de53d8956e8dcf80
  InstanceType:
    Description: EC2 instance type
    Type: String
    Default: t2.micro
    ConstraintDescription: must be a valid EC2 instance type.
Resources:
  WebsiteBucket:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "${TemplateLocation}/bucket-website.yml"
      Parameters:
        FullDomainName: !Ref FullDomainName
  WebsiteRedirectBucket:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "${TemplateLocation}/bucket-redirect.yml"
      Parameters:
        FullDomainName: !Ref FullDomainName
  WebsiteCloudfront:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "${TemplateLocation}/cloudfront.yml"
      Parameters:
        FullDomainName: !Ref FullDomainName
        AcmCertificateArn: !Ref MainSiteAcmCertificateArn
        OriginUrl: !GetAtt WebsiteBucket.Outputs.BucketDomain
  MainSiteARecord:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "${TemplateLocation}/recordset-group-a-alias.yml"
      Parameters:
        DomainName: !Ref DomainName
        FullDomainName: !Ref FullDomainName
        HostedZoneId: Z2FDTNDATAQYW2
        TargetDomainName: !GetAtt WebsiteCloudfront.Outputs.CloudfrontEndpoint
  MainSiteWWWCname:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "${TemplateLocation}/recordset-group-cname.yml"
      Parameters:
        DomainName: !Ref DomainName
        FullDomainName: !Ref FullDomainName
        TargetDomainName: !Join ['', ["www.", !GetAtt WebsiteCloudfront.Outputs.CloudfrontEndpoint]]
  Aurora:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "${TemplateLocation}/aurora-serverless.yml"
      Parameters:
        Subnet1: !Ref Subnet1
        Subnet2: !Ref Subnet2
        SecurityGroupId: !GetAtt SecurityGroups.Outputs.InstanceSecurityGroup
        DatabaseName: !Ref DatabaseName
        VpcId: !Ref VpcId
  SecurityGroups:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "${TemplateLocation}/security-groups.yml"
      Parameters:
        SSHLocation: !Ref SSHLocation
        VpcId: !Ref VpcId
  ApplicationLoadBalancerAutoScaling:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "${TemplateLocation}/application-load-balancer-autoscaling-group.yml"
      Parameters:
        AcmCertificateArn: !Ref EditSiteAcmCertificateArn
        VpcId: !Ref VpcId
        Subnet1: !Ref Subnet1
        Subnet2: !Ref Subnet2
        S3Bucket: !GetAtt WebsiteBucket.Outputs.BucketName
        KeyName: !Ref KeyName
        InstanceType: !Ref InstanceType
        InstanceAMI: !Ref InstanceAMI
        DBHost: !GetAtt Aurora.Outputs.DatabaseEndpoint
        DBName: !GetAtt Aurora.Outputs.DatabaseName
        InstanceSecurityGroup: !GetAtt SecurityGroups.Outputs.InstanceSecurityGroup
        ApplicationLoadBalancerSecurityGroup: !GetAtt SecurityGroups.Outputs.LoadBalancerSecurityGroup
        SecretId: !GetAtt Aurora.Outputs.DatabaseCredentialsSecret
  EditSiteARecord:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "${TemplateLocation}/recordset-group-a-alias.yml"
      Parameters:
        DomainName: !Ref DomainName
        FullDomainName: !Ref EditDomainName
        HostedZoneId: !GetAtt ApplicationLoadBalancerAutoScaling.Outputs.LoadBalancerZone
        TargetDomainName: !GetAtt ApplicationLoadBalancerAutoScaling.Outputs.LoadBalancerDomain